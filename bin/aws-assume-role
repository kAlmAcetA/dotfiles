#!/usr/bin/env bash

set -e

if [[ $# -lt 1 ]]; then
    echo -e "Usage:\n\t$0 ROLE [OPTIONAL ARGS FOR AWS-CLI]\n\n- ROLE - a role name or an ARN."
    exit 1
fi

ROLE=$1
shift

while [[ $# -gt 0 ]]; do
    case "$1" in
        -a)
            if [ -z "$2" ]; then
                echo "Specify profile name"
                exit 1
            fi
            ACCOUNT="$2"
            acv=AWS_ACCOUNTS_$ACCOUNT
            if [ "${!acv}" ]; then
                ACCOUNT_ID=${!acv}
            else
                ACCOUNT_ID=$ACCOUNT
            fi
            shift 2
            ;;
        *)
            ROLE="$1"
            shift
            ;;
    esac
done

if [[ $ROLE =~ ^arn:aws:iam::[0-9]*:role\/[A-Za-z0-9\-]* ]]; then
    ROLE_ARN=$ROLE
    ROLE="${ROLE_ARN##*/}"
else
    if [ -z "$ACCOUNT_ID" ]; then
        ACCOUNT_ID=`aws sts get-caller-identity | jq --raw-output '.Account'`
    fi
    ROLE_ARN="arn:aws:iam::$ACCOUNT_ID:role/$ROLE"
fi

CONF=~/.aws/credentials
JSON=`aws sts assume-role --role-arn ${ROLE_ARN} --role-session-name assumed-${ROLE} $@`;

AWS_ACCESS_KEY_ID=$(echo ${JSON} | jq --raw-output ".Credentials[\"AccessKeyId\"]");
AWS_SECRET_ACCESS_KEY=$(echo ${JSON} | jq --raw-output ".Credentials[\"SecretAccessKey\"]");
AWS_SESSION_TOKEN=$(echo ${JSON} | jq --raw-output ".Credentials[\"SessionToken\"]");
AWS_EXPIRATION=$(echo ${JSON} | jq --raw-output ".Credentials[\"Expiration\"]");

crudini --set "$CONF" $ROLE aws_access_key_id "$AWS_ACCESS_KEY_ID"
crudini --set "$CONF" $ROLE aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
crudini --set "$CONF" $ROLE aws_session_token "$AWS_SESSION_TOKEN"
crudini --set "$CONF" $ROLE aws_expiration "$AWS_EXPIRATION"

echo "Profile '$ROLE' is ready."  
